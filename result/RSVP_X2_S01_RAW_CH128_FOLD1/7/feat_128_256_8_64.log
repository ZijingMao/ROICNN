Training data shape: 	(97462, 128, 128, 1)
Training label shape:	(97462,)
Testing data shape:  	(10130, 128, 128, 1)
Testing label shape: 	(10130,)
max input value is: 21719.5
min input value is: -13142.3
random permuted training data
==============================================================================
Model: 			inference_stcnn
Tensor Name: 	Placeholder:0
[64, 128, 128, 1]
==============================================================================
Tensor Name: conv0/conv0:0
[64, 1, 124, 128]
==============================================================================
Tensor Name: MaxPool:0
[64, 1, 62, 128]
==============================================================================
Tensor Name: conv1/conv1:0
[64, 1, 58, 256]
==============================================================================
Tensor Name: MaxPool_1:0
[64, 1, 29, 256]
==============================================================================
Tensor Name: conv2/conv2:0
[64, 1, 25, 8]
==============================================================================
Tensor Name: MaxPool_2:0
[64, 1, 12, 8]
==============================================================================
Tensor Name: conv3/conv3:0
[64, 1, 8, 64]
==============================================================================
Tensor Name: MaxPool_3:0
[64, 1, 4, 64]
==============================================================================
Tensor Name: local1/local1:0
[64, 128]
==============================================================================
Tensor Name: local2/local2:0
[64, 128]
==============================================================================
Tensor Name: softmax_linear/softmax_linear:0
[64, 4]
Step 0: loss = 1.5121 (0.049 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48722  Precision @ 1: 0.5052
Validation Data Eval:
  Num examples: 960  Num correct: 497  Precision @ 1: 0.5177
Test Data Eval:
  Num examples: 10112  Num correct: 5390  Precision @ 1: 0.5330
Step 1000: loss = 0.7793 (0.031 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 54953  Precision @ 1: 0.5698
Validation Data Eval:
  Num examples: 960  Num correct: 544  Precision @ 1: 0.5667
Test Data Eval:
  Num examples: 10112  Num correct: 6388  Precision @ 1: 0.6317
Step 2000: loss = 0.7369 (0.053 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 55860  Precision @ 1: 0.5792
Validation Data Eval:
  Num examples: 960  Num correct: 562  Precision @ 1: 0.5854
Test Data Eval:
  Num examples: 10112  Num correct: 6446  Precision @ 1: 0.6375
Step 3000: loss = 0.7122 (0.057 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 56191  Precision @ 1: 0.5826
Validation Data Eval:
  Num examples: 960  Num correct: 556  Precision @ 1: 0.5792
Test Data Eval:
  Num examples: 10112  Num correct: 6711  Precision @ 1: 0.6637
Step 4000: loss = 0.6914 (0.047 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 57953  Precision @ 1: 0.6009
Validation Data Eval:
  Num examples: 960  Num correct: 574  Precision @ 1: 0.5979
Test Data Eval:
  Num examples: 10112  Num correct: 6807  Precision @ 1: 0.6732
Step 5000: loss = 0.6947 (0.049 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 59049  Precision @ 1: 0.6122
Validation Data Eval:
  Num examples: 960  Num correct: 572  Precision @ 1: 0.5958
Test Data Eval:
  Num examples: 10112  Num correct: 7006  Precision @ 1: 0.6928
Step 6000: loss = 0.6893 (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 57425  Precision @ 1: 0.5954
Validation Data Eval:
  Num examples: 960  Num correct: 546  Precision @ 1: 0.5687
Test Data Eval:
  Num examples: 10112  Num correct: 6962  Precision @ 1: 0.6885
Step 7000: loss = 0.6818 (0.058 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 60310  Precision @ 1: 0.6253
Validation Data Eval:
  Num examples: 960  Num correct: 593  Precision @ 1: 0.6177
Test Data Eval:
  Num examples: 10112  Num correct: 7208  Precision @ 1: 0.7128
Step 8000: loss = 0.6440 (0.056 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 60733  Precision @ 1: 0.6297
Validation Data Eval:
  Num examples: 960  Num correct: 587  Precision @ 1: 0.6115
Test Data Eval:
  Num examples: 10112  Num correct: 7094  Precision @ 1: 0.7015
Step 9000: loss = 0.6364 (0.050 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 61398  Precision @ 1: 0.6366
Validation Data Eval:
  Num examples: 960  Num correct: 573  Precision @ 1: 0.5969
Test Data Eval:
  Num examples: 10112  Num correct: 7214  Precision @ 1: 0.7134
Step 10000: loss = 0.6314 (0.047 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 61457  Precision @ 1: 0.6372
Validation Data Eval:
  Num examples: 960  Num correct: 565  Precision @ 1: 0.5885
Test Data Eval:
  Num examples: 10112  Num correct: 7174  Precision @ 1: 0.7095
Step 11000: loss = 0.6105 (0.050 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 62402  Precision @ 1: 0.6470
Validation Data Eval:
  Num examples: 960  Num correct: 580  Precision @ 1: 0.6042
Test Data Eval:
  Num examples: 10112  Num correct: 7224  Precision @ 1: 0.7144
Step 12000: loss = 0.6710 (0.052 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 62355  Precision @ 1: 0.6465
Validation Data Eval:
  Num examples: 960  Num correct: 584  Precision @ 1: 0.6083
Test Data Eval:
  Num examples: 10112  Num correct: 7248  Precision @ 1: 0.7168
Step 13000: loss = 0.6184 (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 62193  Precision @ 1: 0.6448
Validation Data Eval:
  Num examples: 960  Num correct: 594  Precision @ 1: 0.6188
Test Data Eval:
  Num examples: 10112  Num correct: 7181  Precision @ 1: 0.7101
Step 14000: loss = 0.6464 (0.058 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 61771  Precision @ 1: 0.6405
Validation Data Eval:
  Num examples: 960  Num correct: 571  Precision @ 1: 0.5948
Test Data Eval:
  Num examples: 10112  Num correct: 7095  Precision @ 1: 0.7016
Step 15000: loss = 0.5599 (0.049 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 63750  Precision @ 1: 0.6610
Validation Data Eval:
  Num examples: 960  Num correct: 584  Precision @ 1: 0.6083
Test Data Eval:
  Num examples: 10112  Num correct: 7209  Precision @ 1: 0.7129
Step 16000: loss = 0.5520 (0.055 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 63645  Precision @ 1: 0.6599
Validation Data Eval:
  Num examples: 960  Num correct: 595  Precision @ 1: 0.6198
Test Data Eval:
  Num examples: 10112  Num correct: 7073  Precision @ 1: 0.6995
Step 17000: loss = 0.5975 (0.055 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 64812  Precision @ 1: 0.6720
Validation Data Eval:
  Num examples: 960  Num correct: 602  Precision @ 1: 0.6271
Test Data Eval:
  Num examples: 10112  Num correct: 7204  Precision @ 1: 0.7124
Step 18000: loss = 0.5732 (0.049 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 63375  Precision @ 1: 0.6571
Validation Data Eval:
  Num examples: 960  Num correct: 581  Precision @ 1: 0.6052
Test Data Eval:
  Num examples: 10112  Num correct: 6923  Precision @ 1: 0.6846
Step 19000: loss = 0.7020 (0.055 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 65476  Precision @ 1: 0.6789
Validation Data Eval:
  Num examples: 960  Num correct: 593  Precision @ 1: 0.6177
Test Data Eval:
  Num examples: 10112  Num correct: 7161  Precision @ 1: 0.7082
Step 20000: loss = 0.6800 (0.049 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 66469  Precision @ 1: 0.6892
Validation Data Eval:
  Num examples: 960  Num correct: 597  Precision @ 1: 0.6219
Test Data Eval:
  Num examples: 10112  Num correct: 7221  Precision @ 1: 0.7141
Step 21000: loss = 0.5970 (0.048 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 65959  Precision @ 1: 0.6839
Validation Data Eval:
  Num examples: 960  Num correct: 604  Precision @ 1: 0.6292
Test Data Eval:
  Num examples: 10112  Num correct: 7020  Precision @ 1: 0.6942
Step 22000: loss = 0.6566 (0.060 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 65335  Precision @ 1: 0.6774
Validation Data Eval:
  Num examples: 960  Num correct: 578  Precision @ 1: 0.6021
Test Data Eval:
  Num examples: 10112  Num correct: 7043  Precision @ 1: 0.6965
Step 23000: loss = 0.5628 (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 66404  Precision @ 1: 0.6885
Validation Data Eval:
  Num examples: 960  Num correct: 593  Precision @ 1: 0.6177
Test Data Eval:
  Num examples: 10112  Num correct: 7002  Precision @ 1: 0.6924
Step 24000: loss = 0.5858 (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 67158  Precision @ 1: 0.6963
Validation Data Eval:
  Num examples: 960  Num correct: 608  Precision @ 1: 0.6333
Test Data Eval:
  Num examples: 10112  Num correct: 7075  Precision @ 1: 0.6997
Step 25000: loss = 0.5870 (0.058 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 67858  Precision @ 1: 0.7036
Validation Data Eval:
  Num examples: 960  Num correct: 599  Precision @ 1: 0.6240
Test Data Eval:
  Num examples: 10112  Num correct: 7052  Precision @ 1: 0.6974
Step 26000: loss = 0.7043 (0.051 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 68460  Precision @ 1: 0.7098
Validation Data Eval:
  Num examples: 960  Num correct: 605  Precision @ 1: 0.6302
Test Data Eval:
  Num examples: 10112  Num correct: 6898  Precision @ 1: 0.6822
Step 27000: loss = 0.6148 (0.055 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 67994  Precision @ 1: 0.7050
Validation Data Eval:
  Num examples: 960  Num correct: 599  Precision @ 1: 0.6240
Test Data Eval:
  Num examples: 10112  Num correct: 6910  Precision @ 1: 0.6833
Step 28000: loss = 0.5937 (0.059 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 67627  Precision @ 1: 0.7012
Validation Data Eval:
  Num examples: 960  Num correct: 595  Precision @ 1: 0.6198
Test Data Eval:
  Num examples: 10112  Num correct: 7044  Precision @ 1: 0.6966
Step 29000: loss = 0.5773 (0.055 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 70234  Precision @ 1: 0.7282
Validation Data Eval:
  Num examples: 960  Num correct: 585  Precision @ 1: 0.6094
Test Data Eval:
  Num examples: 10112  Num correct: 6938  Precision @ 1: 0.6861
Step 30000: loss = 0.5711 (0.056 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 69302  Precision @ 1: 0.7185
Validation Data Eval:
  Num examples: 960  Num correct: 606  Precision @ 1: 0.6312
Test Data Eval:
  Num examples: 10112  Num correct: 6920  Precision @ 1: 0.6843
Step 31000: loss = 0.5210 (0.056 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 69877  Precision @ 1: 0.7245
Validation Data Eval:
  Num examples: 960  Num correct: 596  Precision @ 1: 0.6208
Test Data Eval:
  Num examples: 10112  Num correct: 7033  Precision @ 1: 0.6955
Step 32000: loss = 0.4635 (0.058 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 70864  Precision @ 1: 0.7347
Validation Data Eval:
  Num examples: 960  Num correct: 601  Precision @ 1: 0.6260
Test Data Eval:
  Num examples: 10112  Num correct: 6916  Precision @ 1: 0.6839
Step 33000: loss = 0.6718 (0.056 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 70002  Precision @ 1: 0.7258
Validation Data Eval:
  Num examples: 960  Num correct: 588  Precision @ 1: 0.6125
Test Data Eval:
  Num examples: 10112  Num correct: 6817  Precision @ 1: 0.6741
Step 34000: loss = 0.5373 (0.047 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 70784  Precision @ 1: 0.7339
Validation Data Eval:
  Num examples: 960  Num correct: 615  Precision @ 1: 0.6406
Test Data Eval:
  Num examples: 10112  Num correct: 6930  Precision @ 1: 0.6853
Step 35000: loss = 0.6093 (0.058 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 71920  Precision @ 1: 0.7457
Validation Data Eval:
  Num examples: 960  Num correct: 603  Precision @ 1: 0.6281
Test Data Eval:
  Num examples: 10112  Num correct: 6892  Precision @ 1: 0.6816
Step 36000: loss = 0.4404 (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 72088  Precision @ 1: 0.7474
Validation Data Eval:
  Num examples: 960  Num correct: 587  Precision @ 1: 0.6115
Test Data Eval:
  Num examples: 10112  Num correct: 6861  Precision @ 1: 0.6785
Step 37000: loss = 0.4965 (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 72089  Precision @ 1: 0.7474
Validation Data Eval:
  Num examples: 960  Num correct: 587  Precision @ 1: 0.6115
Test Data Eval:
  Num examples: 10112  Num correct: 6729  Precision @ 1: 0.6654
Step 38000: loss = 0.5116 (0.056 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 73465  Precision @ 1: 0.7617
Validation Data Eval:
  Num examples: 960  Num correct: 596  Precision @ 1: 0.6208
Test Data Eval:
  Num examples: 10112  Num correct: 6743  Precision @ 1: 0.6668
Step 39000: loss = 0.4200 (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 73894  Precision @ 1: 0.7662
Validation Data Eval:
  Num examples: 960  Num correct: 599  Precision @ 1: 0.6240
Test Data Eval:
  Num examples: 10112  Num correct: 6876  Precision @ 1: 0.6800
Step 40000: loss = 0.4835 (0.051 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 73724  Precision @ 1: 0.7644
Validation Data Eval:
  Num examples: 960  Num correct: 603  Precision @ 1: 0.6281
Test Data Eval:
  Num examples: 10112  Num correct: 6887  Precision @ 1: 0.6811
Step 41000: loss = 0.5329 (0.059 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 74304  Precision @ 1: 0.7704
Validation Data Eval:
  Num examples: 960  Num correct: 592  Precision @ 1: 0.6167
Test Data Eval:
  Num examples: 10112  Num correct: 6913  Precision @ 1: 0.6836
Step 42000: loss = 0.4831 (0.051 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 74611  Precision @ 1: 0.7736
Validation Data Eval:
  Num examples: 960  Num correct: 568  Precision @ 1: 0.5917
Test Data Eval:
  Num examples: 10112  Num correct: 6679  Precision @ 1: 0.6605
Step 43000: loss = 0.4370 (0.047 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 74875  Precision @ 1: 0.7763
Validation Data Eval:
  Num examples: 960  Num correct: 589  Precision @ 1: 0.6135
Test Data Eval:
  Num examples: 10112  Num correct: 6715  Precision @ 1: 0.6641
Step 44000: loss = 0.2871 (0.055 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 74605  Precision @ 1: 0.7735
Validation Data Eval:
  Num examples: 960  Num correct: 586  Precision @ 1: 0.6104
Test Data Eval:
  Num examples: 10112  Num correct: 6660  Precision @ 1: 0.6586
Step 45000: loss = 0.4725 (0.050 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 76042  Precision @ 1: 0.7884
Validation Data Eval:
  Num examples: 960  Num correct: 606  Precision @ 1: 0.6312
Test Data Eval:
  Num examples: 10112  Num correct: 6805  Precision @ 1: 0.6730
Step 46000: loss = 0.5020 (0.050 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 75848  Precision @ 1: 0.7864
Validation Data Eval:
  Num examples: 960  Num correct: 587  Precision @ 1: 0.6115
Test Data Eval:
  Num examples: 10112  Num correct: 6749  Precision @ 1: 0.6674
Step 47000: loss = 0.4149 (0.051 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 77093  Precision @ 1: 0.7993
Validation Data Eval:
  Num examples: 960  Num correct: 608  Precision @ 1: 0.6333
Test Data Eval:
  Num examples: 10112  Num correct: 6739  Precision @ 1: 0.6664
Step 48000: loss = 0.4680 (0.053 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 77364  Precision @ 1: 0.8021
Validation Data Eval:
  Num examples: 960  Num correct: 576  Precision @ 1: 0.6000
Test Data Eval:
  Num examples: 10112  Num correct: 6762  Precision @ 1: 0.6687
Step 49000: loss = 0.3797 (0.052 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 77246  Precision @ 1: 0.8009
Validation Data Eval:
  Num examples: 960  Num correct: 592  Precision @ 1: 0.6167
Test Data Eval:
  Num examples: 10112  Num correct: 6628  Precision @ 1: 0.6555
Step 50000: loss = 0.4315 (0.051 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 78537  Precision @ 1: 0.8143
Validation Data Eval:
  Num examples: 960  Num correct: 585  Precision @ 1: 0.6094
Test Data Eval:
  Num examples: 10112  Num correct: 6725  Precision @ 1: 0.6651
Step 51000: loss = 0.5285 (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 78148  Precision @ 1: 0.8103
Validation Data Eval:
  Num examples: 960  Num correct: 587  Precision @ 1: 0.6115
Test Data Eval:
  Num examples: 10112  Num correct: 6722  Precision @ 1: 0.6648
Step 52000: loss = 0.4293 (0.050 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 77330  Precision @ 1: 0.8018
Validation Data Eval:
  Num examples: 960  Num correct: 572  Precision @ 1: 0.5958
Test Data Eval:
  Num examples: 10112  Num correct: 6639  Precision @ 1: 0.6565
Step 53000: loss = 0.4391 (0.049 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 79853  Precision @ 1: 0.8279
Validation Data Eval:
  Num examples: 960  Num correct: 588  Precision @ 1: 0.6125
Test Data Eval:
  Num examples: 10112  Num correct: 6561  Precision @ 1: 0.6488
Step 54000: loss = 0.3923 (0.053 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 79077  Precision @ 1: 0.8199
Validation Data Eval:
  Num examples: 960  Num correct: 576  Precision @ 1: 0.6000
Test Data Eval:
  Num examples: 10112  Num correct: 6718  Precision @ 1: 0.6644
Step 55000: loss = 0.3568 (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 78452  Precision @ 1: 0.8134
Validation Data Eval:
  Num examples: 960  Num correct: 587  Precision @ 1: 0.6115
Test Data Eval:
  Num examples: 10112  Num correct: 6515  Precision @ 1: 0.6443
Step 56000: loss = 0.2787 (0.051 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 80101  Precision @ 1: 0.8305
Validation Data Eval:
  Num examples: 960  Num correct: 575  Precision @ 1: 0.5990
Test Data Eval:
  Num examples: 10112  Num correct: 6671  Precision @ 1: 0.6597
Step 57000: loss = 0.3385 (0.057 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48089  Precision @ 1: 0.4986
Validation Data Eval:
  Num examples: 960  Num correct: 490  Precision @ 1: 0.5104
Test Data Eval:
  Num examples: 10112  Num correct: 5057  Precision @ 1: 0.5001
Step 58000: loss = nan (0.053 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48209  Precision @ 1: 0.4998
Validation Data Eval:
  Num examples: 960  Num correct: 487  Precision @ 1: 0.5073
Test Data Eval:
  Num examples: 10112  Num correct: 5058  Precision @ 1: 0.5002
Step 59000: loss = nan (0.053 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48186  Precision @ 1: 0.4996
Validation Data Eval:
  Num examples: 960  Num correct: 493  Precision @ 1: 0.5135
Test Data Eval:
  Num examples: 10112  Num correct: 5056  Precision @ 1: 0.5000
Step 60000: loss = nan (0.049 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48155  Precision @ 1: 0.4993
Validation Data Eval:
  Num examples: 960  Num correct: 495  Precision @ 1: 0.5156
Test Data Eval:
  Num examples: 10112  Num correct: 5057  Precision @ 1: 0.5001
Step 61000: loss = nan (0.056 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48015  Precision @ 1: 0.4978
Validation Data Eval:
  Num examples: 960  Num correct: 488  Precision @ 1: 0.5083
Test Data Eval:
  Num examples: 10112  Num correct: 5059  Precision @ 1: 0.5003
Step 62000: loss = nan (0.053 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48326  Precision @ 1: 0.5011
Validation Data Eval:
  Num examples: 960  Num correct: 471  Precision @ 1: 0.4906
Test Data Eval:
  Num examples: 10112  Num correct: 5054  Precision @ 1: 0.4998
Step 63000: loss = nan (0.052 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48247  Precision @ 1: 0.5002
Validation Data Eval:
  Num examples: 960  Num correct: 466  Precision @ 1: 0.4854
Test Data Eval:
  Num examples: 10112  Num correct: 5055  Precision @ 1: 0.4999
Step 64000: loss = nan (0.049 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48225  Precision @ 1: 0.5000
Validation Data Eval:
  Num examples: 960  Num correct: 493  Precision @ 1: 0.5135
Test Data Eval:
  Num examples: 10112  Num correct: 5055  Precision @ 1: 0.4999
Step 65000: loss = nan (0.056 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48300  Precision @ 1: 0.5008
Validation Data Eval:
  Num examples: 960  Num correct: 494  Precision @ 1: 0.5146
Test Data Eval:
  Num examples: 10112  Num correct: 5057  Precision @ 1: 0.5001
Step 66000: loss = nan (0.057 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48364  Precision @ 1: 0.5015
Validation Data Eval:
  Num examples: 960  Num correct: 474  Precision @ 1: 0.4938
Test Data Eval:
  Num examples: 10112  Num correct: 5058  Precision @ 1: 0.5002
Step 67000: loss = nan (0.058 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48225  Precision @ 1: 0.5000
Validation Data Eval:
  Num examples: 960  Num correct: 490  Precision @ 1: 0.5104
Test Data Eval:
  Num examples: 10112  Num correct: 5052  Precision @ 1: 0.4996
Step 68000: loss = nan (0.053 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48301  Precision @ 1: 0.5008
Validation Data Eval:
  Num examples: 960  Num correct: 471  Precision @ 1: 0.4906
Test Data Eval:
  Num examples: 10112  Num correct: 5058  Precision @ 1: 0.5002
Step 69000: loss = nan (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48092  Precision @ 1: 0.4986
Validation Data Eval:
  Num examples: 960  Num correct: 468  Precision @ 1: 0.4875
Test Data Eval:
  Num examples: 10112  Num correct: 5057  Precision @ 1: 0.5001
Step 70000: loss = nan (0.051 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48292  Precision @ 1: 0.5007
Validation Data Eval:
  Num examples: 960  Num correct: 467  Precision @ 1: 0.4865
Test Data Eval:
  Num examples: 10112  Num correct: 5056  Precision @ 1: 0.5000
Step 71000: loss = nan (0.051 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48323  Precision @ 1: 0.5010
Validation Data Eval:
  Num examples: 960  Num correct: 496  Precision @ 1: 0.5167
Test Data Eval:
  Num examples: 10112  Num correct: 5054  Precision @ 1: 0.4998
Step 72000: loss = nan (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48175  Precision @ 1: 0.4995
Validation Data Eval:
  Num examples: 960  Num correct: 474  Precision @ 1: 0.4938
Test Data Eval:
  Num examples: 10112  Num correct: 5057  Precision @ 1: 0.5001
Step 73000: loss = nan (0.047 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48253  Precision @ 1: 0.5003
Validation Data Eval:
  Num examples: 960  Num correct: 467  Precision @ 1: 0.4865
Test Data Eval:
  Num examples: 10112  Num correct: 5055  Precision @ 1: 0.4999
Step 74000: loss = nan (0.048 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48210  Precision @ 1: 0.4999
Validation Data Eval:
  Num examples: 960  Num correct: 492  Precision @ 1: 0.5125
Test Data Eval:
  Num examples: 10112  Num correct: 5055  Precision @ 1: 0.4999
Step 75000: loss = nan (0.053 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48093  Precision @ 1: 0.4986
Validation Data Eval:
  Num examples: 960  Num correct: 487  Precision @ 1: 0.5073
Test Data Eval:
  Num examples: 10112  Num correct: 5053  Precision @ 1: 0.4997
Step 76000: loss = nan (0.048 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48125  Precision @ 1: 0.4990
Validation Data Eval:
  Num examples: 960  Num correct: 496  Precision @ 1: 0.5167
Test Data Eval:
  Num examples: 10112  Num correct: 5053  Precision @ 1: 0.4997
Step 77000: loss = nan (0.057 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48170  Precision @ 1: 0.4994
Validation Data Eval:
  Num examples: 960  Num correct: 485  Precision @ 1: 0.5052
Test Data Eval:
  Num examples: 10112  Num correct: 5054  Precision @ 1: 0.4998
Step 78000: loss = nan (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 47991  Precision @ 1: 0.4976
Validation Data Eval:
  Num examples: 960  Num correct: 491  Precision @ 1: 0.5115
Test Data Eval:
  Num examples: 10112  Num correct: 5057  Precision @ 1: 0.5001
Step 79000: loss = nan (0.053 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48204  Precision @ 1: 0.4998
Validation Data Eval:
  Num examples: 960  Num correct: 475  Precision @ 1: 0.4948
Test Data Eval:
  Num examples: 10112  Num correct: 5056  Precision @ 1: 0.5000
Step 80000: loss = nan (0.055 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48153  Precision @ 1: 0.4993
Validation Data Eval:
  Num examples: 960  Num correct: 489  Precision @ 1: 0.5094
Test Data Eval:
  Num examples: 10112  Num correct: 5057  Precision @ 1: 0.5001
Step 81000: loss = nan (0.056 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48196  Precision @ 1: 0.4997
Validation Data Eval:
  Num examples: 960  Num correct: 472  Precision @ 1: 0.4917
Test Data Eval:
  Num examples: 10112  Num correct: 5054  Precision @ 1: 0.4998
Step 82000: loss = nan (0.058 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48182  Precision @ 1: 0.4996
Validation Data Eval:
  Num examples: 960  Num correct: 488  Precision @ 1: 0.5083
Test Data Eval:
  Num examples: 10112  Num correct: 5054  Precision @ 1: 0.4998
Step 83000: loss = nan (0.061 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48177  Precision @ 1: 0.4995
Validation Data Eval:
  Num examples: 960  Num correct: 471  Precision @ 1: 0.4906
Test Data Eval:
  Num examples: 10112  Num correct: 5056  Precision @ 1: 0.5000
Step 84000: loss = nan (0.055 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48245  Precision @ 1: 0.5002
Validation Data Eval:
  Num examples: 960  Num correct: 471  Precision @ 1: 0.4906
Test Data Eval:
  Num examples: 10112  Num correct: 5054  Precision @ 1: 0.4998
Step 85000: loss = nan (0.057 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48245  Precision @ 1: 0.5002
Validation Data Eval:
  Num examples: 960  Num correct: 468  Precision @ 1: 0.4875
Test Data Eval:
  Num examples: 10112  Num correct: 5056  Precision @ 1: 0.5000
Step 86000: loss = nan (0.052 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48239  Precision @ 1: 0.5002
Validation Data Eval:
  Num examples: 960  Num correct: 470  Precision @ 1: 0.4896
Test Data Eval:
  Num examples: 10112  Num correct: 5055  Precision @ 1: 0.4999
Step 87000: loss = nan (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48091  Precision @ 1: 0.4986
Validation Data Eval:
  Num examples: 960  Num correct: 488  Precision @ 1: 0.5083
Test Data Eval:
  Num examples: 10112  Num correct: 5055  Precision @ 1: 0.4999
Step 88000: loss = nan (0.052 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48206  Precision @ 1: 0.4998
Validation Data Eval:
  Num examples: 960  Num correct: 481  Precision @ 1: 0.5010
Test Data Eval:
  Num examples: 10112  Num correct: 5052  Precision @ 1: 0.4996
Step 89000: loss = nan (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48202  Precision @ 1: 0.4998
Validation Data Eval:
  Num examples: 960  Num correct: 499  Precision @ 1: 0.5198
Test Data Eval:
  Num examples: 10112  Num correct: 5054  Precision @ 1: 0.4998
Step 90000: loss = nan (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48425  Precision @ 1: 0.5021
Validation Data Eval:
  Num examples: 960  Num correct: 491  Precision @ 1: 0.5115
Test Data Eval:
  Num examples: 10112  Num correct: 5059  Precision @ 1: 0.5003
Step 91000: loss = nan (0.047 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48242  Precision @ 1: 0.5002
Validation Data Eval:
  Num examples: 960  Num correct: 492  Precision @ 1: 0.5125
Test Data Eval:
  Num examples: 10112  Num correct: 5053  Precision @ 1: 0.4997
Step 92000: loss = nan (0.047 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48081  Precision @ 1: 0.4985
Validation Data Eval:
  Num examples: 960  Num correct: 467  Precision @ 1: 0.4865
Test Data Eval:
  Num examples: 10112  Num correct: 5054  Precision @ 1: 0.4998
Step 93000: loss = nan (0.050 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48219  Precision @ 1: 0.4999
Validation Data Eval:
  Num examples: 960  Num correct: 494  Precision @ 1: 0.5146
Test Data Eval:
  Num examples: 10112  Num correct: 5051  Precision @ 1: 0.4995
Step 94000: loss = nan (0.059 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48156  Precision @ 1: 0.4993
Validation Data Eval:
  Num examples: 960  Num correct: 492  Precision @ 1: 0.5125
Test Data Eval:
  Num examples: 10112  Num correct: 5058  Precision @ 1: 0.5002
Step 95000: loss = nan (0.054 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48150  Precision @ 1: 0.4992
Validation Data Eval:
  Num examples: 960  Num correct: 494  Precision @ 1: 0.5146
Test Data Eval:
  Num examples: 10112  Num correct: 5060  Precision @ 1: 0.5004
Step 96000: loss = nan (0.048 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48052  Precision @ 1: 0.4982
Validation Data Eval:
  Num examples: 960  Num correct: 492  Precision @ 1: 0.5125
Test Data Eval:
  Num examples: 10112  Num correct: 5055  Precision @ 1: 0.4999
Step 97000: loss = nan (0.047 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48212  Precision @ 1: 0.4999
Validation Data Eval:
  Num examples: 960  Num correct: 491  Precision @ 1: 0.5115
Test Data Eval:
  Num examples: 10112  Num correct: 5053  Precision @ 1: 0.4997
Step 98000: loss = nan (0.053 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48376  Precision @ 1: 0.5016
Validation Data Eval:
  Num examples: 960  Num correct: 468  Precision @ 1: 0.4875
Test Data Eval:
  Num examples: 10112  Num correct: 5059  Precision @ 1: 0.5003
Step 99000: loss = nan (0.050 sec)
Training Data Eval:
  Num examples: 96448  Num correct: 48386  Precision @ 1: 0.5017
Validation Data Eval:
  Num examples: 960  Num correct: 461  Precision @ 1: 0.4802
Test Data Eval:
  Num examples: 10112  Num correct: 5058  Precision @ 1: 0.5002
